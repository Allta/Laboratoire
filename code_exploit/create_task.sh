#!/bin/bash 

# Script to create pre defined task and add them to the administration script
# Security has been implemented throught REGEX and readonly file to avoid
# code injection


menu_path="/netsec/Laboratoire/code_exploit/menu_entry"

#
# Check if Regex is working as intended
#
REGEX="^[0-9]{2}-[a-z]{6}\.sh"
PS3="Please select an admin task : "


function print_usage(){
cat << EOF
-- 
Usage : $0 -f" {filename}" 

Filename must have 6 characters only !
Example : backup / archiv / proces / userss
EOF
}

[[ $# -lt 1 ]] && print_usage

while getopts "f:c:" option
do 
	case "${option}" in
		f) task_name="$OPTARG"
		;;
#		c) command_name="$OPTARG"
#		;;
		*) print_usage
		;;
	esac
done


task_number=$(ls ${menu_path} | wc -l)
task_number=$((task_number+1))
[[ $task_number -le 9 ]] && task_number="0$task_number"

task_file="${task_number}-${task_name}.sh"

#
# Finish the missing function
#
function disk_usage(){
	echo "df -H | tail -n+2 | grep -vE \"^Filesystem|tmpfs|cdrom\" | awk 'BEGIN{print \"Taille UtilisÃ© Dispo\"}; {print \$4 \" \" \$5 \" \" \$6}'"
}

function archive_worpdress(){
	echo "TODO : achive wordpress"
}

function logged_users(){
	echo "TODO : logged users"
}

function top_process(){
	echo "TODO : top process"
}

declare -a task_array
task_array=(archive disk who process)

select task in "${task_array[@]}"
do
	case ${task} in 
		archive) cmd='tar cvzf /var/www/html/backup-$(date "+%y%m%d").tar.gz /var/www/html/wordpress'
		;;
		disk) cmd=$(disk_usage)
		;;
		who) cmd='who'
		;;
		process) cmd='ps auxf | sort -nr -k 4 | head -5'
		;;
	esac
#
# Create task in read only for Root to avoid code injection
#
	if [[ ${task_file} =~ ${REGEX} ]];then 
		echo "${cmd}" >> ${menu_path}/${task_file}
		chmod 744 ${menu_path}/${task_file}
	exit
	fi 	
done


